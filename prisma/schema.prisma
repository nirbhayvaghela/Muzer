// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @default(uuid())
  email    String    @unique
  password String?
  provider Providers
  Queue    Queue? 
}

model Stream {
  id            String     @id @default(uuid())
  url           String
  extractedId   String     @unique
  title         String     @default("")
  smallImage    String     @default("")
  bigImage      String     @default("")
  played        Boolean    @default(false)
  type          StreamType
  upvotes       Upvote[]
  queueID       String
  queue         Queue      @relation(fields: [queueID], references: [id], onDelete: Cascade)
}

model Queue {
  id      String   @id @default(uuid())
  streams Stream[]
  userId  String   @unique
  user    User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Upvote {
  id       String @id @default(uuid())
  streamId String
  stream   Stream @relation(fields: [streamId], references: [id])

  @@unique([streamId])
}

enum StreamType {
  Spotify
  Youtube
}

enum Providers {
  Google
}